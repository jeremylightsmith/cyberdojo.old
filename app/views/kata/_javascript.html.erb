
<% # NB: I've tried putting the contents of this file into -%>
<% #     public/javascripts/application.js but it only works here -%>

<script language="javascript" type="text/javascript">

var move = false;

function createTextAreaWithLines(id)
{
  var el = document.createElement('TEXTAREA');
  var ta = document.getElementById(id);
       
  var string = '';
  for (var no = 1; no < 300; no++) {
    if (string.length > 0)
      string += '\r\n';
    string += no;
  }
       
  el.className      = 'textarea_with_line_numbers';
  el.innerHTML      = string;  // Firefox renders \n linebreak
  el.innerText      = string;  // IE6 renders \n line break
  el.value          = string;  // Safari
  el.style.zIndex   = 0;
  ta.style.zIndex   = 1;
  // ta.style.position = 'relative';
  ta.parentNode.insertBefore(el, ta.nextSibling);
  setLine();
  ta.focus();
       
  ta.onscroll     = function() { setLine(); }
  ta.onkeydown    = function() { setLine(); }
  ta.onmousedown  = function() { setLine(); move=true; }
  ta.onmouseup    = function() { setLine(); move=false; }
  ta.onmousemove  = function() { if (move) { setLine(); } }
             
  function setLine() {
    el.scrollTop   = ta.scrollTop;
    el.style.top   = (ta.offsetTop) + "px";
    // el.style.left  = (ta.offsetLeft - 37) + "px";
  }
}

function trim(stringToTrim) 
{
  return stringToTrim.replace(/^\s+|\s+$/g,"");
}

function getFilenameTr(filename)
{
  var input = document.getElementById('radio_' + filename);
  var div = input.parentNode;
  var td = div.parentNode;
  var tr = td.parentNode;
  return tr;
}

function renameCurrentFile()
{
  // current_filename always contains a filename
  var filename = current_filename;

  if (filename == "kata.sh")
  {
    alert(filename + " cannot be renamed (it is the file the " +
      "Cyber-Dojo server executes on each iteration).");
    return;
  }

  var newname = trim(prompt("Rename " + filename + " to: ", ""));
  if (newname == null)
    return; // Cancelled

  if (newname == "") 
  {
    alert("Nothing entered: rename abandoned");
    return;
  }
   
  // TODO: what if there is already a file with the chosen name
  // TODO: what if the chosen name is editor? Or any name whose id 
  //       matches an existing html id attribute?

  // rename hidden textarea by appending new one and removing old one
  var new_ta = new Element("textarea", { id:newname, name:newname });
  new_ta.value = $('editor').value;
  $('visible_files_container').appendChild(new_ta);
  var old_ta = $(filename);
  $('visible_files_container').removeChild(old_ta);

  // change name in $('visible_files_container')
  var current = $('visible_filenames_container').value;
  current = current.replace(';'+filename+";", ";"+newname+";");
  $('visible_filenames_container').value = current;

  // change name in file-list
  var tr = getFilenameTr(filename);
  var tbody = tr.parentNode;
  tbody.removeChild(tr);
  tbody.appendChild(makeFileListEntry(newname));
  sortFileList();

  // select it in list
  current_filename = newname;
  loadFile(newname);
}

function deleteCurrentFile()
{
  // current_filename always contains a filename
  var filename = current_filename;

  if (filename == "kata.sh")
  {
    alert(filename + " cannot be deleted (it is the file the " +
      "Cyber-Dojo server executes on each iteration).");
    return;
  }

  if (!confirm("Click OK to delete " + filename))
    return; // Cancelled

  // remove from file-list 
  var tr = getFilenameTr(current_filename);
  var tbody = tr.parentNode;
  tbody.removeChild(tr);

  // remove hidden textarea
  $('visible_files_container').removeChild($(filename));

  // remove from visible_filenames_container
  var current = $('visible_filenames_container').value;
  current = current.replace(';'+filename+";", ";");
  $('visible_filenames_container').value = current;

  // if deleted file is current file then load kata.sh
  if (filename == current_filename) 
  {
    current_filename = false;
    $('editor').value = "";
    // important make sure something is always open 
    // so that right-click drop-down menu options that
    // read Rename _this_ file... and Delete _this_ file...
    // have a this file! 
    loadFile('kata.sh');
  }
}

function homePage()
{
  window.location = "/dojo/index/";
}

function everyoneElsePage()
{
  window.open("/kata/see_all_increments/<%=h @dojo.id -%>?kata_id=<%=CGI::escape(@kata.id) -%>");
}

function atLoad()
{
   loadFile('kata.sh');
}
window.onload = atLoad;

var current_filename = false;

function saveCurrentFile()
{
  if (current_filename) 
  {
    $(current_filename).value = $('editor').value;
  }
}

function loadFile(name)
{
  saveCurrentFile();
  $('editor').value = $(name).value;
  current_filename = name;
  document.getElementById('radio_' + name).checked = true;
}

function preRunTests()
{
  saveCurrentFile();
  Element.show('run_tests_spinner');
}

function postRunTests()
{
   Element.hide('run_tests_spinner');
}

function makeFileListEntry(filename)
{
  var div = new Element("div");
  div.onclick = new Function("loadFile('" + filename + "')");
  var inp = new Element("input", 
    { id:"radio_" + filename, name:"radio_filename", type:"radio", value:filename });
  div.appendChild(inp);
  div.appendChild(document.createTextNode(filename));
  var td = new Element("td");
  td.appendChild(div);
  var tr = new Element("tr");
  tr.appendChild(td);

  return tr;
}

function isElement(n)
{
  return n.nodeType == 1;
}

function firstElement(e)
{
  var children = e.childNodes;
  for (var i in children)
  {
    var item = children[i];
    if (isElement(item))
      return item;
  }
  return null;
}

function nameOf(e)
{
  var td = firstElement(e);
  var div = firstElement(td);
  var inp = firstElement(div);
  return inp.getAttribute("value"); 
}

function sortFileList()
{
  var list = $('file-list');
  var items = list.childNodes;
  var array = [];

  for (var i in items)
  {
    var item = items[i];
    if (isElement(item))
      array.push(item);
  }

  array.sort(function(lhs,rhs) {
    var lhs_name = nameOf(lhs);
    var rhs_name = nameOf(rhs);
    if (lhs_name < rhs_name)
      return -1;
    else if (lhs_name > rhs_name)
      return 1;
    else
      return 0; // should never happen!
  });

  for (i = 0; i != array.length; i++)
    list.appendChild(array[i]);
}

function newFile()
{
  var filename = trim(prompt("Enter the new file's name: ", ""));
  if (filename == null)
    return; // Cancelled

  if (filename == "") 
  {
    alert("Nothing entered: new-file abandoned");
    return;
  }

  // Create new hidden textarea (to save to before submitting)
  var ta = new Element("textarea", { id:filename, name:filename });
  $('visible_files_container').appendChild(ta);

  // Make the new filename visible in the file-manager list
  $('file-list').appendChild(makeFileListEntry(filename));
  sortFileList();

  // Make its name available to rails
  var current = trim($('visible_filenames_container').value);
  current += filename;
  current += ";";
  $('visible_filenames_container').value = current;

  loadFile(filename);
}
</script>

